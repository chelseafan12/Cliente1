import { TLObject } from '../TL.js';
import { Raw } from '../../platform.node.js';
import { Message } from '../Messages/Message.js';
import { User } from '../Advanced/User.js';
import type { Snake } from '../../Client/index.js';
export declare class CallbackQuery extends TLObject {
    id: bigint;
    from?: User;
    message?: Message;
    data?: string;
    chatInstance?: bigint;
    inlineMessageId?: string;
    gameShortName?: string;
    constructor({ id, from, message, data, chatInstance, inlineMessageId, gameShortName, }: {
        id: bigint;
        from?: User;
        message?: Message;
        data?: string;
        chatInstance?: bigint;
        inlineMessageId?: string;
        gameShortName?: string;
    }, client: Snake);
    static parse(client: Snake, update: Raw.UpdateBotCallbackQuery | Raw.UpdateInlineBotCallbackQuery, chats: Array<Raw.TypeChat>, users: Array<Raw.TypeUser>): Promise<CallbackQuery>;
    static parseBot(client: Snake, update: Raw.UpdateBotCallbackQuery, _: Array<Raw.TypeChat>, users: Array<Raw.TypeUser>): Promise<CallbackQuery>;
    static parseInline(client: Snake, update: Raw.UpdateInlineBotCallbackQuery, _: Array<Raw.TypeChat>, users: Array<Raw.TypeUser>): Promise<CallbackQuery>;
}
