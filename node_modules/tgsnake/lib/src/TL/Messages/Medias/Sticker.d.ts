import { TLObject } from '../../TL.js';
import { Raw } from '../../../platform.node.js';
import type { Snake } from '../../../Client/index.js';
import { PhotoSize } from './PhotoSize.js';
import { type sendStickerParams } from '../../../Methods/Messages/SendSticker.js';
export declare class Sticker extends TLObject {
    fileId: string;
    fileUniqueId: string;
    date: Date;
    dcId: number;
    isAnimated: boolean;
    isVideo: boolean;
    size: bigint;
    thumb: Array<PhotoSize>;
    width: number;
    height: number;
    mimeType?: string;
    emoji?: string;
    constructor({ fileId, fileUniqueId, date, dcId, isAnimated, isVideo, size, thumb, width, height, mimeType, emoji, }: {
        fileId: string;
        fileUniqueId: string;
        date: Date;
        dcId: number;
        isAnimated: boolean;
        isVideo: boolean;
        size: bigint;
        thumb: Array<PhotoSize>;
        width: number;
        height: number;
        mimeType?: string;
        emoji?: string;
    }, client: Snake);
    static parse(client: Snake, document: Raw.Document): Sticker;
    resend(chatId: bigint | string, more: sendStickerParams): Promise<import("../Message.js").Message>;
}
