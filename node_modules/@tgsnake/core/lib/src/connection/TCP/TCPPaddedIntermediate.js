"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TCPPaddedIntermediate = void 0;
const platform_node_js_1 = require("../../platform.node.js");
const tcp_js_1 = require("./tcp.js");
class TCPPaddedIntermediate extends tcp_js_1.TCP {
    constructor() {
        super();
    }
    async connect(ip, port, proxy, dcId) {
        await super.connect(ip, port, proxy, dcId);
        await super.send(platform_node_js_1.Buffer.concat([
            platform_node_js_1.Buffer.from('dd', 'hex'),
            platform_node_js_1.Buffer.from('dd', 'hex'),
            platform_node_js_1.Buffer.from('dd', 'hex'),
            platform_node_js_1.Buffer.from('dd', 'hex'),
        ]));
    }
    async send(data) {
        data = platform_node_js_1.Buffer.concat([data, platform_node_js_1.Buffer.alloc(data.length % 4)]);
        let allocLength = platform_node_js_1.Buffer.alloc(4);
        allocLength.writeInt32LE(data.length, 0);
        await super.send(platform_node_js_1.Buffer.concat([allocLength, data]));
    }
    async recv(_length = 0) {
        let length = await super.recv(4);
        if (!length)
            return;
        let data = await super.recv(length.readInt32LE(0));
        if (!data)
            return;
        return data.slice(0, data.length - (data.length % 4));
    }
}
exports.TCPPaddedIntermediate = TCPPaddedIntermediate;
