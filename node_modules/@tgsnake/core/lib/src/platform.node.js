"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.path = exports.bigInt = exports.os = exports.net = exports.crypto = exports.Buffer = exports.where = exports.isBrowser = exports.isBun = exports.isDeno = exports.aesjs = exports.Duplex = exports.Writable = exports.Readable = exports.Semaphore = exports.Mutex = exports.SocksClient = exports.Logger = exports.gunzipSync = exports.gzipSync = exports.inspect = void 0;
const crypto = __importStar(require("crypto"));
exports.crypto = crypto;
const net = __importStar(require("net"));
exports.net = net;
const os = __importStar(require("os"));
exports.os = os;
const path = __importStar(require("path"));
exports.path = path;
const buffer = __importStar(require("buffer"));
var util_1 = require("util");
Object.defineProperty(exports, "inspect", { enumerable: true, get: function () { return util_1.inspect; } });
var zlib_1 = require("zlib");
Object.defineProperty(exports, "gzipSync", { enumerable: true, get: function () { return zlib_1.gzipSync; } });
Object.defineProperty(exports, "gunzipSync", { enumerable: true, get: function () { return zlib_1.gunzipSync; } });
const big_integer_1 = __importDefault(require("big-integer"));
exports.bigInt = big_integer_1.default;
var log_1 = require("@tgsnake/log");
Object.defineProperty(exports, "Logger", { enumerable: true, get: function () { return log_1.Logger; } });
var socks_1 = require("socks");
Object.defineProperty(exports, "SocksClient", { enumerable: true, get: function () { return socks_1.SocksClient; } });
var async_mutex_1 = require("async-mutex");
Object.defineProperty(exports, "Mutex", { enumerable: true, get: function () { return async_mutex_1.Mutex; } });
Object.defineProperty(exports, "Semaphore", { enumerable: true, get: function () { return async_mutex_1.Semaphore; } });
var stream_1 = require("stream");
Object.defineProperty(exports, "Readable", { enumerable: true, get: function () { return stream_1.Readable; } });
Object.defineProperty(exports, "Writable", { enumerable: true, get: function () { return stream_1.Writable; } });
Object.defineProperty(exports, "Duplex", { enumerable: true, get: function () { return stream_1.Duplex; } });
var aesjs;
(function (aesjs) {
    let ModeOfOperation;
    (function (ModeOfOperation) {
        class ecb {
            constructor(..._args) {
                throw new Error('not implemented');
            }
            encrypt(..._args) {
                return buffer.Buffer.alloc(0);
            }
            decrypt(..._args) {
                return buffer.Buffer.alloc(0);
            }
        }
        ModeOfOperation.ecb = ecb;
        class ctr {
            constructor(..._args) {
                throw new Error('not implemented');
            }
            encrypt(..._args) {
                return buffer.Buffer.alloc(0);
            }
            decrypt(..._args) {
                return buffer.Buffer.alloc(0);
            }
        }
        ModeOfOperation.ctr = ctr;
    })(ModeOfOperation = aesjs.ModeOfOperation || (aesjs.ModeOfOperation = {}));
    class Counter {
        constructor(..._args) {
            throw new Error('not implemented');
        }
    }
    aesjs.Counter = Counter;
})(aesjs || (exports.aesjs = aesjs = {}));
exports.isDeno = 'Deno' in globalThis;
exports.isBun = 'Bun' in globalThis;
exports.isBrowser = !exports.isDeno && !exports.isBun && typeof window !== 'undefined';
exports.where = exports.isDeno ? 'Deno' : exports.isBun ? 'Bun' : exports.isBrowser ? 'Browser' : 'Node';
exports.Buffer = buffer.Buffer;
