"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserDeactivatedBan = exports.UserDeactivated = exports.SessionRevoked = exports.SessionPasswordNeeded = exports.SessionExpired = exports.AuthKeyUnregistered = exports.AuthKeyPermEmpty = exports.AuthKeyInvalid = exports.ActiveUserRequired = exports.Unauthorized = void 0;
const RpcError_js_1 = require("../RpcError.js");
class Unauthorized extends RpcError_js_1.RPCError {
    code = 401;
    name = 'UNAUTHORIZED';
}
exports.Unauthorized = Unauthorized;
class ActiveUserRequired extends Unauthorized {
    id = 'ACTIVE_USER_REQUIRED';
    message = 'The method is only available to already activated users';
}
exports.ActiveUserRequired = ActiveUserRequired;
class AuthKeyInvalid extends Unauthorized {
    id = 'AUTH_KEY_INVALID';
    message = 'The key is invalid';
}
exports.AuthKeyInvalid = AuthKeyInvalid;
class AuthKeyPermEmpty extends Unauthorized {
    id = 'AUTH_KEY_PERM_EMPTY';
    message = 'The method is unavailable for temporary authorization key, not bound to permanent';
}
exports.AuthKeyPermEmpty = AuthKeyPermEmpty;
class AuthKeyUnregistered extends Unauthorized {
    id = 'AUTH_KEY_UNREGISTERED';
    message = 'The key is not registered in the system. Delete your session file and login again';
}
exports.AuthKeyUnregistered = AuthKeyUnregistered;
class SessionExpired extends Unauthorized {
    id = 'SESSION_EXPIRED';
    message = 'The authorization has expired';
}
exports.SessionExpired = SessionExpired;
class SessionPasswordNeeded extends Unauthorized {
    id = 'SESSION_PASSWORD_NEEDED';
    message = 'The two-step verification is enabled and a password is required';
}
exports.SessionPasswordNeeded = SessionPasswordNeeded;
class SessionRevoked extends Unauthorized {
    id = 'SESSION_REVOKED';
    message = 'The authorization has been invalidated, because of the user terminating all sessions';
}
exports.SessionRevoked = SessionRevoked;
class UserDeactivated extends Unauthorized {
    id = 'USER_DEACTIVATED';
    message = 'The user has been deleted/deactivated';
}
exports.UserDeactivated = UserDeactivated;
class UserDeactivatedBan extends Unauthorized {
    id = 'USER_DEACTIVATED_BAN';
    message = 'The user has been deleted/deactivated';
}
exports.UserDeactivatedBan = UserDeactivatedBan;
