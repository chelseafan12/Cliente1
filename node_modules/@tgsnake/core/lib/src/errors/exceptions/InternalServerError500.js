"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WorkerBusyTooLongRetry = exports.VolumeLocNotFound = exports.UploadNoVolume = exports.UnknownMethod = exports.StoreInvalidScalarType = exports.StorageCheckFailed = exports.SignInFailed = exports.SendMediaInvalid = exports.RpcMcgetFail = exports.RpcConnectFailed = exports.RpcCallFail = exports.RegIdGenerateFailed = exports.RandomIdDuplicate = exports.PtsChangeEmpty = exports.PostponedTimeout = exports.PhotoCreateFailed = exports.PersistentTimestampOutdated = exports.ParticipantCallFailed = exports.NoWorkersRunning = exports.NeedMemberInvalid = exports.NeedChatInvalid = exports.MtSendQueueTooLong = exports.MsgWaitFailed = exports.MsgRangeUnsync = exports.MsgidDecreaseRetry = exports.MemberOccupyUsernameFailed = exports.MemberOccupyPrimaryLocFailed = exports.MemberNoLocation = exports.MemberNotFound = exports.MemberFetchFailed = exports.MemberChatAddFailed = exports.InterdcCallRichError = exports.InterdcCallError = exports.ImageEngineDown = exports.HistoryGetFailed = exports.GroupedIdOccupyFailed = exports.GroupcallAddParticipantsFailed = exports.FolderDeacAutofixAll = exports.EncryptionOccupyFailed = exports.EncryptionOccupyAdminFailed = exports.ChpCallFail = exports.ChatOccupyUsernameFailed = exports.ChatOccupyLocFailed = exports.ChatInvalid = exports.ChatIdGenerateFailed = exports.CdnUploadTimeout = exports.CallOccupyFailed = exports.AuthRestart = exports.ApiCallError = exports.InternalServerError = void 0;
exports.WpIdGenerateFailed = void 0;
const RpcError_js_1 = require("../RpcError.js");
class InternalServerError extends RpcError_js_1.RPCError {
    code = 500;
    name = 'INTERNAL_SERVER_ERROR';
}
exports.InternalServerError = InternalServerError;
class ApiCallError extends InternalServerError {
    id = 'API_CALL_ERROR';
    message = 'API call error due to Telegram having internal problems. Please try again later';
}
exports.ApiCallError = ApiCallError;
class AuthRestart extends InternalServerError {
    id = 'AUTH_RESTART';
    message = 'Restart the authorization process.';
}
exports.AuthRestart = AuthRestart;
class CallOccupyFailed extends InternalServerError {
    id = 'CALL_OCCUPY_FAILED';
    message = 'The call failed because the user is already making another call.';
}
exports.CallOccupyFailed = CallOccupyFailed;
class CdnUploadTimeout extends InternalServerError {
    id = 'CDN_UPLOAD_TIMEOUT';
    message = 'A server-side timeout occurred while reuploading the file to the CDN DC.';
}
exports.CdnUploadTimeout = CdnUploadTimeout;
class ChatIdGenerateFailed extends InternalServerError {
    id = 'CHAT_ID_GENERATE_FAILED';
    message = 'Failure while generating the chat ID.';
}
exports.ChatIdGenerateFailed = ChatIdGenerateFailed;
class ChatInvalid extends InternalServerError {
    id = 'CHAT_INVALID';
    message = 'Invalid chat.';
}
exports.ChatInvalid = ChatInvalid;
class ChatOccupyLocFailed extends InternalServerError {
    id = 'CHAT_OCCUPY_LOC_FAILED';
    message = 'An internal error occurred while creating the chat';
}
exports.ChatOccupyLocFailed = ChatOccupyLocFailed;
class ChatOccupyUsernameFailed extends InternalServerError {
    id = 'CHAT_OCCUPY_USERNAME_FAILED';
    message = 'Failure to occupy chat username due to Telegram having internal problems. Please try again later';
}
exports.ChatOccupyUsernameFailed = ChatOccupyUsernameFailed;
class ChpCallFail extends InternalServerError {
    id = 'CHP_CALL_FAIL';
    message = 'Telegram is having internal problems. Please try again later';
}
exports.ChpCallFail = ChpCallFail;
class EncryptionOccupyAdminFailed extends InternalServerError {
    id = 'ENCRYPTION_OCCUPY_ADMIN_FAILED';
    message = 'Failed occupying memory for admin info due to Telegram having internal problems. Please try again later';
}
exports.EncryptionOccupyAdminFailed = EncryptionOccupyAdminFailed;
class EncryptionOccupyFailed extends InternalServerError {
    id = 'ENCRYPTION_OCCUPY_FAILED';
    message = 'Internal server error while accepting secret chat';
}
exports.EncryptionOccupyFailed = EncryptionOccupyFailed;
class FolderDeacAutofixAll extends InternalServerError {
    id = 'FOLDER_DEAC_AUTOFIX_ALL';
    message = 'Telegram is having internal problems. Please try again later';
}
exports.FolderDeacAutofixAll = FolderDeacAutofixAll;
class GroupcallAddParticipantsFailed extends InternalServerError {
    id = 'GROUPCALL_ADD_PARTICIPANTS_FAILED';
    message = 'Failure while adding voice chat member due to Telegram having internal problems. Please try again later';
}
exports.GroupcallAddParticipantsFailed = GroupcallAddParticipantsFailed;
class GroupedIdOccupyFailed extends InternalServerError {
    id = 'GROUPED_ID_OCCUPY_FAILED';
    message = 'Telegram is having internal problems. Please try again later';
}
exports.GroupedIdOccupyFailed = GroupedIdOccupyFailed;
class HistoryGetFailed extends InternalServerError {
    id = 'HISTORY_GET_FAILED';
    message = "The chat history couldn't be retrieved due to Telegram having internal problems. Please try again later";
}
exports.HistoryGetFailed = HistoryGetFailed;
class ImageEngineDown extends InternalServerError {
    id = 'IMAGE_ENGINE_DOWN';
    message = 'Image engine down due to Telegram having internal problems. Please try again later';
}
exports.ImageEngineDown = ImageEngineDown;
class InterdcCallError extends InternalServerError {
    id = 'INTERDC_X_CALL_ERROR';
    message = 'An error occurred while Telegram was intercommunicating with DC{value}. Please try again later';
}
exports.InterdcCallError = InterdcCallError;
class InterdcCallRichError extends InternalServerError {
    id = 'INTERDC_X_CALL_RICH_ERROR';
    message = 'A rich error occurred while Telegram was intercommunicating with DC{value}. Please try again later';
}
exports.InterdcCallRichError = InterdcCallRichError;
class MemberChatAddFailed extends InternalServerError {
    id = 'MEMBER_CHAT_ADD_FAILED';
    message = '';
}
exports.MemberChatAddFailed = MemberChatAddFailed;
class MemberFetchFailed extends InternalServerError {
    id = 'MEMBER_FETCH_FAILED';
    message = 'Telegram is having internal problems. Please try again later';
}
exports.MemberFetchFailed = MemberFetchFailed;
class MemberNotFound extends InternalServerError {
    id = 'MEMBER_NOT_FOUND';
    message = '';
}
exports.MemberNotFound = MemberNotFound;
class MemberNoLocation extends InternalServerError {
    id = 'MEMBER_NO_LOCATION';
    message = "Couldn't find the member's location due to Telegram having internal problems. Please try again later";
}
exports.MemberNoLocation = MemberNoLocation;
class MemberOccupyPrimaryLocFailed extends InternalServerError {
    id = 'MEMBER_OCCUPY_PRIMARY_LOC_FAILED';
    message = 'Telegram is having internal problems. Please try again later';
}
exports.MemberOccupyPrimaryLocFailed = MemberOccupyPrimaryLocFailed;
class MemberOccupyUsernameFailed extends InternalServerError {
    id = 'MEMBER_OCCUPY_USERNAME_FAILED';
    message = 'Failure to occupy member username due to Telegram having internal problems. Please try again later';
}
exports.MemberOccupyUsernameFailed = MemberOccupyUsernameFailed;
class MsgidDecreaseRetry extends InternalServerError {
    id = 'MSGID_DECREASE_RETRY';
    message = 'Telegram is having internal problems. Please try again later';
}
exports.MsgidDecreaseRetry = MsgidDecreaseRetry;
class MsgRangeUnsync extends InternalServerError {
    id = 'MSG_RANGE_UNSYNC';
    message = 'Message range unsynchronized due to Telegram having internal problems. Please try again later';
}
exports.MsgRangeUnsync = MsgRangeUnsync;
class MsgWaitFailed extends InternalServerError {
    id = 'MSG_WAIT_FAILED';
    message = 'A waiting call returned an error.';
}
exports.MsgWaitFailed = MsgWaitFailed;
class MtSendQueueTooLong extends InternalServerError {
    id = 'MT_SEND_QUEUE_TOO_LONG';
    message = 'The MTProto send queue has grown too much due to Telegram having internal problems. Please try again later';
}
exports.MtSendQueueTooLong = MtSendQueueTooLong;
class NeedChatInvalid extends InternalServerError {
    id = 'NEED_CHAT_INVALID';
    message = 'The provided chat is invalid';
}
exports.NeedChatInvalid = NeedChatInvalid;
class NeedMemberInvalid extends InternalServerError {
    id = 'NEED_MEMBER_INVALID';
    message = 'The provided member is invalid or does not exist';
}
exports.NeedMemberInvalid = NeedMemberInvalid;
class NoWorkersRunning extends InternalServerError {
    id = 'No_workers_running';
    message = 'The Telegram server is restarting its workers. Try again later.';
}
exports.NoWorkersRunning = NoWorkersRunning;
class ParticipantCallFailed extends InternalServerError {
    id = 'PARTICIPANT_CALL_FAILED';
    message = 'Failure while making call due to Telegram having internal problems. Please try again later';
}
exports.ParticipantCallFailed = ParticipantCallFailed;
class PersistentTimestampOutdated extends InternalServerError {
    id = 'PERSISTENT_TIMESTAMP_OUTDATED';
    message = 'Channel internal replication issues, try again later (treat this like an RPC_CALL_FAIL).';
}
exports.PersistentTimestampOutdated = PersistentTimestampOutdated;
class PhotoCreateFailed extends InternalServerError {
    id = 'PHOTO_CREATE_FAILED';
    message = 'The creation of the photo failed due to Telegram having internal problems. Please try again later';
}
exports.PhotoCreateFailed = PhotoCreateFailed;
class PostponedTimeout extends InternalServerError {
    id = 'POSTPONED_TIMEOUT';
    message = 'Telegram is having internal problems. Please try again later';
}
exports.PostponedTimeout = PostponedTimeout;
class PtsChangeEmpty extends InternalServerError {
    id = 'PTS_CHANGE_EMPTY';
    message = 'No PTS change';
}
exports.PtsChangeEmpty = PtsChangeEmpty;
class RandomIdDuplicate extends InternalServerError {
    id = 'RANDOM_ID_DUPLICATE';
    message = 'You provided a random ID that was already used.';
}
exports.RandomIdDuplicate = RandomIdDuplicate;
class RegIdGenerateFailed extends InternalServerError {
    id = 'REG_ID_GENERATE_FAILED';
    message = 'The registration id failed to generate due to Telegram having internal problems. Please try again later';
}
exports.RegIdGenerateFailed = RegIdGenerateFailed;
class RpcCallFail extends InternalServerError {
    id = 'RPC_CALL_FAIL';
    message = 'Telegram is having internal problems. Please try again later';
}
exports.RpcCallFail = RpcCallFail;
class RpcConnectFailed extends InternalServerError {
    id = 'RPC_CONNECT_FAILED';
    message = 'Telegram is having internal problems. Please try again later';
}
exports.RpcConnectFailed = RpcConnectFailed;
class RpcMcgetFail extends InternalServerError {
    id = 'RPC_MCGET_FAIL';
    message = 'Telegram is having internal problems. Please try again later';
}
exports.RpcMcgetFail = RpcMcgetFail;
class SendMediaInvalid extends InternalServerError {
    id = 'SEND_MEDIA_INVALID';
    message = 'The specified media is invalid.';
}
exports.SendMediaInvalid = SendMediaInvalid;
class SignInFailed extends InternalServerError {
    id = 'SIGN_IN_FAILED';
    message = 'Failure while signing in.';
}
exports.SignInFailed = SignInFailed;
class StorageCheckFailed extends InternalServerError {
    id = 'STORAGE_CHECK_FAILED';
    message = 'Server storage check failed due to Telegram having internal problems. Please try again later';
}
exports.StorageCheckFailed = StorageCheckFailed;
class StoreInvalidScalarType extends InternalServerError {
    id = 'STORE_INVALID_SCALAR_TYPE';
    message = 'Telegram is having internal problems. Please try again later';
}
exports.StoreInvalidScalarType = StoreInvalidScalarType;
class UnknownMethod extends InternalServerError {
    id = 'UNKNOWN_METHOD';
    message = 'The method you tried to call cannot be called on non-CDN DCs';
}
exports.UnknownMethod = UnknownMethod;
class UploadNoVolume extends InternalServerError {
    id = 'UPLOAD_NO_VOLUME';
    message = 'Telegram is having internal problems. Please try again later';
}
exports.UploadNoVolume = UploadNoVolume;
class VolumeLocNotFound extends InternalServerError {
    id = 'VOLUME_LOC_NOT_FOUND';
    message = 'Telegram is having internal problems. Please try again later';
}
exports.VolumeLocNotFound = VolumeLocNotFound;
class WorkerBusyTooLongRetry extends InternalServerError {
    id = 'WORKER_BUSY_TOO_LONG_RETRY';
    message = 'Server workers are too busy right now due to Telegram having internal problems. Please try again later';
}
exports.WorkerBusyTooLongRetry = WorkerBusyTooLongRetry;
class WpIdGenerateFailed extends InternalServerError {
    id = 'WP_ID_GENERATE_FAILED';
    message = 'Telegram is having internal problems. Please try again later';
}
exports.WpIdGenerateFailed = WpIdGenerateFailed;
