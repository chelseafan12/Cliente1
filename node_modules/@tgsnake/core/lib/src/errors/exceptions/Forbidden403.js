"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.VoiceMessagesForbidden = exports.UserRestricted = exports.UserPrivacyRestricted = exports.UserNotMutualContact = exports.UserIsBlocked = exports.UserInvalid = exports.UserDeleted = exports.UserChannelsTooMuch = exports.UserBotInvalid = exports.TakeoutRequired = exports.SensitiveChangeForbidden = exports.RightForbidden = exports.PublicChannelMissing = exports.PrivacyPremiumRequired = exports.PremiumAccountRequired = exports.PollVoteRequired = exports.ParticipantJoinMissing = exports.MessageDeleteForbidden = exports.MessageAuthorRequired = exports.InlineBotRequired = exports.GroupcallForbidden = exports.GroupcallAlreadyStarted = exports.EditBotInviteForbidden = exports.ChatWriteForbidden = exports.ChatSendVoicesForbidden = exports.ChatSendVideosForbidden = exports.ChatSendStickersForbidden = exports.ChatSendPollForbidden = exports.ChatSendPlainForbidden = exports.ChatSendPhotosForbidden = exports.ChatSendMediaForbidden = exports.ChatSendInlineForbidden = exports.ChatSendGifsForbidden = exports.ChatSendGameForbidden = exports.ChatSendDocsForbidden = exports.ChatSendAudiosForbidden = exports.ChatGuestSendForbidden = exports.ChatForbidden = exports.ChatAdminRequired = exports.ChatAdminInviteRequired = exports.ChannelPublicGroupNa = exports.BroadcastForbidden = exports.AnonymousReactionsDisabled = exports.Forbidden = void 0;
const RpcError_js_1 = require("../RpcError.js");
class Forbidden extends RpcError_js_1.RPCError {
    code = 403;
    name = 'FORBIDDEN';
}
exports.Forbidden = Forbidden;
class AnonymousReactionsDisabled extends Forbidden {
    id = 'ANONYMOUS_REACTIONS_DISABLED';
    message = 'Sorry, anonymous administrators cannot leave reactions or participate in polls.';
}
exports.AnonymousReactionsDisabled = AnonymousReactionsDisabled;
class BroadcastForbidden extends Forbidden {
    id = 'BROADCAST_FORBIDDEN';
    message = 'Channel poll voters and reactions cannot be fetched to prevent deanonymization.';
}
exports.BroadcastForbidden = BroadcastForbidden;
class ChannelPublicGroupNa extends Forbidden {
    id = 'CHANNEL_PUBLIC_GROUP_NA';
    message = 'channel/supergroup not available.';
}
exports.ChannelPublicGroupNa = ChannelPublicGroupNa;
class ChatAdminInviteRequired extends Forbidden {
    id = 'CHAT_ADMIN_INVITE_REQUIRED';
    message = 'You do not have the rights to do this.';
}
exports.ChatAdminInviteRequired = ChatAdminInviteRequired;
class ChatAdminRequired extends Forbidden {
    id = 'CHAT_ADMIN_REQUIRED';
    message = 'You must be an admin in this chat to do this.';
}
exports.ChatAdminRequired = ChatAdminRequired;
class ChatForbidden extends Forbidden {
    id = 'CHAT_FORBIDDEN';
    message = 'You cannot write in this chat';
}
exports.ChatForbidden = ChatForbidden;
class ChatGuestSendForbidden extends Forbidden {
    id = 'CHAT_GUEST_SEND_FORBIDDEN';
    message = 'You join the discussion group before commenting, see [here &raquo;](https://core.telegram.org/api/discussion#requiring-users-to-join-the-group) for more info.';
}
exports.ChatGuestSendForbidden = ChatGuestSendForbidden;
class ChatSendAudiosForbidden extends Forbidden {
    id = 'CHAT_SEND_AUDIOS_FORBIDDEN';
    message = "You can't send audio messages in this chat.";
}
exports.ChatSendAudiosForbidden = ChatSendAudiosForbidden;
class ChatSendDocsForbidden extends Forbidden {
    id = 'CHAT_SEND_DOCS_FORBIDDEN';
    message = "You can't send documents in this chat.";
}
exports.ChatSendDocsForbidden = ChatSendDocsForbidden;
class ChatSendGameForbidden extends Forbidden {
    id = 'CHAT_SEND_GAME_FORBIDDEN';
    message = "You can't send a game to this chat.";
}
exports.ChatSendGameForbidden = ChatSendGameForbidden;
class ChatSendGifsForbidden extends Forbidden {
    id = 'CHAT_SEND_GIFS_FORBIDDEN';
    message = "You can't send gifs in this chat.";
}
exports.ChatSendGifsForbidden = ChatSendGifsForbidden;
class ChatSendInlineForbidden extends Forbidden {
    id = 'CHAT_SEND_INLINE_FORBIDDEN';
    message = "You can't send inline messages in this group.";
}
exports.ChatSendInlineForbidden = ChatSendInlineForbidden;
class ChatSendMediaForbidden extends Forbidden {
    id = 'CHAT_SEND_MEDIA_FORBIDDEN';
    message = "You can't send media in this chat.";
}
exports.ChatSendMediaForbidden = ChatSendMediaForbidden;
class ChatSendPhotosForbidden extends Forbidden {
    id = 'CHAT_SEND_PHOTOS_FORBIDDEN';
    message = "You can't send photos in this chat.";
}
exports.ChatSendPhotosForbidden = ChatSendPhotosForbidden;
class ChatSendPlainForbidden extends Forbidden {
    id = 'CHAT_SEND_PLAIN_FORBIDDEN';
    message = "You can't send non-media (text) messages in this chat.";
}
exports.ChatSendPlainForbidden = ChatSendPlainForbidden;
class ChatSendPollForbidden extends Forbidden {
    id = 'CHAT_SEND_POLL_FORBIDDEN';
    message = "You can't send polls in this chat.";
}
exports.ChatSendPollForbidden = ChatSendPollForbidden;
class ChatSendStickersForbidden extends Forbidden {
    id = 'CHAT_SEND_STICKERS_FORBIDDEN';
    message = "You can't send stickers in this chat.";
}
exports.ChatSendStickersForbidden = ChatSendStickersForbidden;
class ChatSendVideosForbidden extends Forbidden {
    id = 'CHAT_SEND_VIDEOS_FORBIDDEN';
    message = "You can't send videos in this chat.";
}
exports.ChatSendVideosForbidden = ChatSendVideosForbidden;
class ChatSendVoicesForbidden extends Forbidden {
    id = 'CHAT_SEND_VOICES_FORBIDDEN';
    message = "You can't send voice recordings in this chat.";
}
exports.ChatSendVoicesForbidden = ChatSendVoicesForbidden;
class ChatWriteForbidden extends Forbidden {
    id = 'CHAT_WRITE_FORBIDDEN';
    message = "You can't write in this chat.";
}
exports.ChatWriteForbidden = ChatWriteForbidden;
class EditBotInviteForbidden extends Forbidden {
    id = 'EDIT_BOT_INVITE_FORBIDDEN';
    message = "Normal users can't edit invites that were created by bots.";
}
exports.EditBotInviteForbidden = EditBotInviteForbidden;
class GroupcallAlreadyStarted extends Forbidden {
    id = 'GROUPCALL_ALREADY_STARTED';
    message = 'The groupcall has already started, you can join directly using [phone.joinGroupCall](https://core.telegram.org/method/phone.joinGroupCall).';
}
exports.GroupcallAlreadyStarted = GroupcallAlreadyStarted;
class GroupcallForbidden extends Forbidden {
    id = 'GROUPCALL_FORBIDDEN';
    message = 'The group call has already ended.';
}
exports.GroupcallForbidden = GroupcallForbidden;
class InlineBotRequired extends Forbidden {
    id = 'INLINE_BOT_REQUIRED';
    message = 'Only the inline bot can edit message.';
}
exports.InlineBotRequired = InlineBotRequired;
class MessageAuthorRequired extends Forbidden {
    id = 'MESSAGE_AUTHOR_REQUIRED';
    message = 'Message author required.';
}
exports.MessageAuthorRequired = MessageAuthorRequired;
class MessageDeleteForbidden extends Forbidden {
    id = 'MESSAGE_DELETE_FORBIDDEN';
    message = "You can't delete one of the messages you tried to delete, most likely because it is a service message.";
}
exports.MessageDeleteForbidden = MessageDeleteForbidden;
class ParticipantJoinMissing extends Forbidden {
    id = 'PARTICIPANT_JOIN_MISSING';
    message = "Trying to enable a presentation, when the user hasn't joined the Video Chat with [phone.joinGroupCall](https://core.telegram.org/method/phone.joinGroupCall).";
}
exports.ParticipantJoinMissing = ParticipantJoinMissing;
class PollVoteRequired extends Forbidden {
    id = 'POLL_VOTE_REQUIRED';
    message = 'Cast a vote in the poll before calling this method.';
}
exports.PollVoteRequired = PollVoteRequired;
class PremiumAccountRequired extends Forbidden {
    id = 'PREMIUM_ACCOUNT_REQUIRED';
    message = 'A premium account is required to execute this action.';
}
exports.PremiumAccountRequired = PremiumAccountRequired;
class PrivacyPremiumRequired extends Forbidden {
    id = 'PRIVACY_PREMIUM_REQUIRED';
    message = 'You need a [Telegram Premium subscription](https://core.telegram.org/api/premium) to send a message to this user.';
}
exports.PrivacyPremiumRequired = PrivacyPremiumRequired;
class PublicChannelMissing extends Forbidden {
    id = 'PUBLIC_CHANNEL_MISSING';
    message = 'You can only export group call invite links for public chats or channels.';
}
exports.PublicChannelMissing = PublicChannelMissing;
class RightForbidden extends Forbidden {
    id = 'RIGHT_FORBIDDEN';
    message = 'Your admin rights do not allow you to do this.';
}
exports.RightForbidden = RightForbidden;
class SensitiveChangeForbidden extends Forbidden {
    id = 'SENSITIVE_CHANGE_FORBIDDEN';
    message = "You can't change your sensitive content settings.";
}
exports.SensitiveChangeForbidden = SensitiveChangeForbidden;
class TakeoutRequired extends Forbidden {
    id = 'TAKEOUT_REQUIRED';
    message = 'A [takeout](https://core.telegram.org/api/takeout) session needs to be initialized first, [see here &raquo; for more info](https://core.telegram.org/api/takeout).';
}
exports.TakeoutRequired = TakeoutRequired;
class UserBotInvalid extends Forbidden {
    id = 'USER_BOT_INVALID';
    message = 'User accounts must provide the `bot` method parameter when calling this method. If there is no such method parameter, this method can only be invoked by bot accounts.';
}
exports.UserBotInvalid = UserBotInvalid;
class UserChannelsTooMuch extends Forbidden {
    id = 'USER_CHANNELS_TOO_MUCH';
    message = 'One of the users you tried to add is already in too many channels/supergroups.';
}
exports.UserChannelsTooMuch = UserChannelsTooMuch;
class UserDeleted extends Forbidden {
    id = 'USER_DELETED';
    message = "You can't send this secret message because the other participant deleted their account.";
}
exports.UserDeleted = UserDeleted;
class UserInvalid extends Forbidden {
    id = 'USER_INVALID';
    message = 'Invalid user provided.';
}
exports.UserInvalid = UserInvalid;
class UserIsBlocked extends Forbidden {
    id = 'USER_IS_BLOCKED';
    message = 'You were blocked by this user.';
}
exports.UserIsBlocked = UserIsBlocked;
class UserNotMutualContact extends Forbidden {
    id = 'USER_NOT_MUTUAL_CONTACT';
    message = 'The provided user is not a mutual contact.';
}
exports.UserNotMutualContact = UserNotMutualContact;
class UserPrivacyRestricted extends Forbidden {
    id = 'USER_PRIVACY_RESTRICTED';
    message = "The user's privacy settings do not allow you to do this.";
}
exports.UserPrivacyRestricted = UserPrivacyRestricted;
class UserRestricted extends Forbidden {
    id = 'USER_RESTRICTED';
    message = "You're spamreported, you can't create channels or chats.";
}
exports.UserRestricted = UserRestricted;
class VoiceMessagesForbidden extends Forbidden {
    id = 'VOICE_MESSAGES_FORBIDDEN';
    message = "This user's privacy settings forbid you from sending voice messages.";
}
exports.VoiceMessagesForbidden = VoiceMessagesForbidden;
