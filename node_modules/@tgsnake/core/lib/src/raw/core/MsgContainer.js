"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MsgContainer = void 0;
const BytesIO_js_1 = require("./BytesIO.js");
const TLObject_js_1 = require("./TLObject.js");
const Primitive = __importStar(require("./primitive/index.js"));
const Message_js_1 = require("./Message.js");
const platform_node_js_1 = require("../../platform.node.js");
class MsgContainer extends TLObject_js_1.TLObject {
    static ID = 0x73f1f8dc;
    messages;
    constructor(messages) {
        super();
        this._slots = ['messages'];
        this.className = 'MsgContainer';
        this.messages = messages;
    }
    static async read(data, ..._args) {
        const count = await Primitive.Int.read(data);
        let messages = [];
        for (let i = 0; i < count; i++) {
            messages.push(await Message_js_1.Message.read(data));
        }
        return new MsgContainer(messages);
    }
    write() {
        let b = new BytesIO_js_1.BytesIO();
        b.write(Primitive.Int.write(MsgContainer.ID, false));
        b.write(Primitive.Int.write(this.messages.length));
        for (let message of this.messages) {
            b.write(message.write());
        }
        return platform_node_js_1.Buffer.from(b.buffer);
    }
}
exports.MsgContainer = MsgContainer;
