/// <reference types="node" />
/// <reference types="node" />
/// <reference types="node" />
/// <reference types="node" />
/// <reference types="node" />
/// <reference types="node" />
/// <reference types="node" />
/// <reference types="node" />
import * as crypto from 'crypto';
import * as net from 'net';
import * as os from 'os';
import * as path from 'path';
import * as buffer from 'buffer';
export { inspect } from 'util';
export { gzipSync, gunzipSync } from 'zlib';
import bigInt from 'big-integer';
export { Logger } from '@tgsnake/log';
export { SocksClient } from 'socks';
export { Mutex, Semaphore } from 'async-mutex';
export { Readable, Writable, Duplex } from 'stream';
export declare namespace aesjs {
    namespace ModeOfOperation {
        class ecb {
            constructor(..._args: Array<any>);
            encrypt(..._args: Array<any>): buffer.Buffer;
            decrypt(..._args: Array<any>): buffer.Buffer;
        }
        class ctr {
            constructor(..._args: Array<any>);
            encrypt(..._args: Array<any>): buffer.Buffer;
            decrypt(..._args: Array<any>): buffer.Buffer;
        }
    }
    class Counter {
        constructor(..._args: Array<any>);
    }
}
export declare const isDeno: boolean;
export declare const isBun: boolean;
export declare const isBrowser: boolean;
export declare const where: string;
export declare const Buffer: BufferConstructor;
export { crypto, net, os, bigInt, path };
