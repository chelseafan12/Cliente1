/// <reference types="node" />
/// <reference types="node" />
import { type Readable } from '../platform.node.js';
import { type Client } from '../client/Client.js';
import { File } from './File.js';
import { Raw } from '../raw/index.js';
export type Progress = (current: number, total: number) => any;
export interface SaveFileParams {
    source: Buffer;
    fileName?: string;
    fileId?: bigint;
    filePart?: number;
    progress?: Progress;
}
export interface SaveFileStreamParams {
    source: Readable | File;
    fileName?: string;
    fileId?: bigint;
    filePart?: number;
    progress?: Progress;
}
export declare function upload(client: Client, source: Buffer, fileName?: string, fileId?: bigint, filePart?: number, progress?: Progress): Promise<Raw.InputFile | Raw.InputFileBig | undefined>;
