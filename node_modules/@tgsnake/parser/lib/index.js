"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Parser = exports.ParserError = exports.Entities = exports.HTMLParser = exports.MDParser = void 0;
/**
 * tgsnake - Telegram MTProto framework for nodejs.
 * Copyright (C) 2024 butthx <https://github.com/butthx>
 *
 * THIS FILE IS PART OF TGSNAKE
 *
 * tgsnake is a free software : you can redistribute it and/or modify
 * it under the terms of the MIT License as published.
 */
const markdown_js_1 = require("./markdown.js");
Object.defineProperty(exports, "MDParser", { enumerable: true, get: function () { return markdown_js_1.parse; } });
const html_js_1 = require("./html.js");
Object.defineProperty(exports, "HTMLParser", { enumerable: true, get: function () { return html_js_1.parse; } });
const Entities_js_1 = require("./Entities.js");
Object.defineProperty(exports, "Entities", { enumerable: true, get: function () { return Entities_js_1.Entities; } });
const ParserError_js_1 = __importDefault(require("./ParserError.js"));
exports.ParserError = ParserError_js_1.default;
const Parser = __importStar(require("./Parser.js"));
exports.Parser = Parser;
